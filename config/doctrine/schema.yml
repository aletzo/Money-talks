options:
  type: InnoDB
  collate: utf8_unicode_ci
  charset: utf8


Account:
  actAs:
    SoftDelete:
    Timestampable:
  columns:
    user_id: { type: integer }
    name:    { type: string(100), notnull: true }
    balance: { type: string(100), notnull: true }
  relations:
    User:    { class: sfGuardUser, local: user_id, foreign: id, foreignAlias: Accounts, onDelete: CASCADE }


Action:
  actAs:
    SoftDelete:
    Timestampable:
  columns:
    account_id: { type: integer }
    user_id:    { type: integer }
    name:       { type: string(100), notnull: true }
    date:       { type: date, notnull: true }
    deposit:    { type: string(100), notnull: true }
    withdrawal: { type: string(100), notnull: true }
    balance:    { type: string(100), notnull: true }
  relations:
    Account: { local: account_id, foreign: id, foreignAlias: Actions, onDelete: CASCADE }
    User:    { class: sfGuardUser, local: user_id, foreign: id, foreignAlias: Actions, onDelete: CASCADE }
    Tags:    { class: Tag, refClass: ActionTag, local: action_id, foreign: tag_id, foreignAlias: Actions, onDelete: CASCADE }


Tag:
  actAs:
    SoftDelete:
    Timestampable:
  columns:
    user_id: { type: integer }
    name:    { type: string(100), notnull: true }
    color:   { type: string(6), notnull: true }
  relations:
    User:    { class: sfGuardUser, local: user_id, foreign: id, foreignAlias: Tags, onDelete: CASCADE }
    Actions: { class: Action, refClass: ActionTag, local: tag_id, foreign: action_id, foreignAlias: Tags, onDelete: CASCADE }
    Budgets: { class: Budget, refClass: BudgetTag, local: tag_id, foreign: budget_id, foreignAlias: Tags, onDelete: CASCADE }


ActionTag:
  columns:
    action_id: { type: integer, primary: true }
    tag_id:    { type: integer, primary: true }
  relations:
    Action: { local: action_id, foreign: id, onDelete: CASCADE }
    Tag:    { local: tag_id, foreign: id, onDelete: CASCADE }

Budget:
  actAs:
    SoftDelete:
    Timestampable:
  columns:
    user_id: { type: integer }
    amount:    { type: string(100), notnull: true }
    current:   { type: string(100), notnull: true }
    month:     { type: integer }
    year:      { type: integer }
  relations:
    User: { class: sfGuardUser, local: user_id, foreign: id, foreignAlias: Budgets, onDelete: CASCADE }
    Tags: { class: Tag, refClass: BudgetTag, local: budget_id, foreign: tag_id, foreignAlias: Budgets, onDelete: CASCADE }

BudgetTag:
  columns:
    budget_id: { type: integer, primary: true }
    tag_id:    { type: integer, primary: true }
  relations:
    Budget: { local: budget_id, foreign: id, onDelete: CASCADE }
    Tag:    { local: tag_id, foreign: id, onDelete: CASCADE }

