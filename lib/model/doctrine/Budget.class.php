<?php

/**
 * Budget
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    moneytalks
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Budget extends BaseBudget
{

    public function fetchAmount($key)
    {
        if (empty($this->amount)) {
            return 0;
        } else {
            return CryptHelper::getInstance()->setKey($key)
                ->decrypt($this->amount);
        }
    }

    public function storeAmount($amount, $key)
    {
        $this->amount = CryptHelper::getInstance()->setKey($key)
            ->encrypt($amount);

        $this->save();
    }

    public function fetchCurrent($key)
    {
        if (empty($this->current)) {
            return 0;
        } else {
            return CryptHelper::getInstance()->setKey($key)
                ->decrypt($this->current);
        }
    }

    public function storeCurrent($current, $key)
    {
        $this->current = CryptHelper::getInstance()->setKey($key)
            ->encrypt($current);

        $this->save();
    }

    public function calculateCurrent($key)
    {
        $tags = array();

        foreach ($this->Tags as $tag) {
            $tags[] = $tag->id;
        }

        $q = Doctrine_Query::create()
            ->from('Action a')
            ->leftJoin('a.Tags t')
            ->whereIn('t.id', $tags);

        $results = $q->execute();

        $current = 0;

        foreach ($results as $result) {
            $current += $result->fetchWithdrawal($key);
        }

        $this->storeCurrent($current, $key);

        $this->save();
    }

}
